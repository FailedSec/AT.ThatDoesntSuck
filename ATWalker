# ---------------------------------------------------------------------- #
# Check for internet connection, then check if VPN is active
# ---------------------------------------------------------------------- #
# [Checking Internet Connectivity First]
while (!(test-connection 8.8.8.8 -Count 1 -Quiet)) {
    write-host "Internet Down"
}

# [Now check if VPN is active / connected] ~ Thanks to Harry Caskey for the snippet for this! (harrycaskey.com)
# in this example "AnyConnect", "Juniper" or "VPN" is the connection name's, but you can change this to whatever fits your environment.
$vpnCheck = Get-WmiObject -Query "Select Name,NetEnabled from Win32_NetworkAdapter where (Name like '%AnyConnect%' or Name like '%Juniper%' or Name like '%VPN%') and NetEnabled='True'"

# Set this value to Boolean if it returns a value it's true, if it does not return a value it's false.
$vpnCheck = [bool]$vpnCheck

# Check if $vpnCheck is true or false.
if ($vpnCheck) {
    return $vpnCheck
    exit(0)
}
else {
    return $vpnCheck
    exit(1)
}
# ---------------------------------------------------------------------- #


# ---------------------------------------------------------------------- #
# Function for detecting change in internet connection.
# Execute function after script initialization
# ---------------------------------------------------------------------- #
# $LastConTime = '' # Counter in minutes
# $LastConLat = '' # Last Connection Latitude
# #LastConLong = '' # Last Connection Longitude
# $ConnectionIsDown = ''
# $ConnectionIsUp = ''


# ---------------------------------------------------------------------- #
# Function for executing script upon establishing a internet connection.
# ---------------------------------------------------------------------- #
# TODO: stuff here..
# TODO: stuff here...
# ---------------------------------------------------------------------- #


# -------------------- #
# Define GeoHQ Radius
# -------------------- #
$LatA = 'xxx' # Start at HQ - Front of Fence (A)
$LongA = 'xxx' 
# -------------------- #
$LatB = '' # - Left Of Fence (B)
$LongB = ''
# -------------------- #
$LatC = 'xxx' # - Back Of Fence (C)
$LongC = 'xxx'
# -------------------- #
$LatD = '' # - Right side fence (D)
$LongD = ''
# ----------------------- #
# Get inner fence radius
# ----------------------- #
# TODO: Calculation function for inner radius of fence points.

# ---------------------------------------------------------------------- #
# Define Radius Fence Trigger
# (Trigger when 'x' amount of distance from lat/long border A,B,C,D)
# ---------------------------------------------------------------------- #
$TriggerA = '' # Front
$TriggerB = '' # Left
$TriggerC = '' # Back
$TriggerD = '' # Right
